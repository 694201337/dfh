{"version":3,"sources":["Harem.js","reportWebVitals.js","index.js"],"names":["song","Audio","Harem","React","useState","haremState","setHaremState","intervalH","setIntervalH","useEffect","setTimeout","haremClassNames","onClickDoctor","useCallback","a","load","play","setInterval","currentTime","clearInterval","className","join","src","alt","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAGMA,EAAO,IAAIC,MAAM,qBAER,SAASC,IAAS,IAAD,EACMC,IAAMC,SAAS,WADrB,mBACvBC,EADuB,KACXC,EADW,OAEIH,IAAMC,SAAS,MAFnB,mBAEvBG,EAFuB,KAEZC,EAFY,KAI9BL,IAAMM,WACJ,WACEC,YAAW,WACTJ,EAAc,WACb,OAEL,IAGF,IAAMK,EAAkB,CAAC,QAASN,GAE5BO,EAAgBT,IAAMU,YAAN,sBACpB,sBAAAC,EAAA,yDACqB,UAAfT,EADN,uBAEIC,EAAc,WAFlB,SAGUN,EAAKe,OAHf,uBAIUf,EAAKgB,OAJf,OAKST,GACHC,EAAaS,aAAY,WACnBjB,EAAKkB,YAAc,OACrBZ,EAAc,UACda,cAAcZ,MAEf,KAXT,2CAgBA,CAACD,EAAeD,EAAYE,EAAWC,IAGzC,OACE,sBAAKY,UAAWT,EAAgBU,KAAK,KAArC,UACE,oBAAID,UAAU,cAAd,6BACA,mCACE,qBAAKE,IAAI,YAAYF,UAAU,WAAWG,IAAI,SAC9C,qBAAKH,UAAU,SAASI,QAASZ,EAAjC,SACE,qBAAKU,IAAI,cAAcC,IAAI,WAE7B,qBAAKD,IAAI,YAAYF,UAAU,YAAYG,IAAI,YAEjD,oBAAIH,UAAU,eAAd,oCClDN,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a46632a5.chunk.js","sourcesContent":["import './Harem.css';\nimport React from 'react';\n\nconst song = new Audio('i_love_my_sex.mp3');\n\nexport default function Harem() {\n  const [haremState, setHaremState] = React.useState('waiting');\n  const [intervalH, setIntervalH] = React.useState(null);\n\n  React.useEffect(\n    () => {\n      setTimeout(() => {\n        setHaremState('ready');\n      }, 1000);\n    }, \n    []\n  );\n\n  const haremClassNames = ['harem', haremState];\n\n  const onClickDoctor = React.useCallback(\n    async () => {\n      if (haremState === 'ready') {\n        setHaremState('loading');\n        await song.load();\n        await song.play();\n        if (!intervalH) {\n          setIntervalH(setInterval(() => {\n            if (song.currentTime > 14.5) {\n              setHaremState('loaded');\n              clearInterval(intervalH)\n            }\n          }, 10));\n        }\n\n      }\n    },\n    [setHaremState, haremState, intervalH, setIntervalH]\n  );\n\n  return (\n    <div className={haremClassNames.join(' ')}>\n      <h1 className='harem-title'>You have joined</h1>\n      <header>\n        <img src='harem.png' className=\"left-hoe\" alt=\"logo\" />\n        <div className='doctor' onClick={onClickDoctor}>\n          <img src='doctor.jpeg' alt=\"logo\" />\n        </div>\n        <img src='harem.png' className=\"right-hoe\" alt=\"logo\" />\n      </header>\n      <h1 className='doctor-title'>Doctor Fuck's Harem</h1>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Harem from './Harem';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Harem />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}